apply plugin: 'com.android.application'



android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        free {
            applicationId "com.udacity.gradle.builditbigger.free"
        }
        paid {
            applicationId "com.udacity.gradle.builditbigger.paid"
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':jokedisplay')
    compile project(path: ':backend', configuration: 'android-endpoints')

    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.google.code.findbugs:jsr305:2.0.1'

    freeCompile 'com.google.android.gms:play-services-ads:8.4.0'

    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'

}

// Tasks to start Backend, run Connected Tests, and Shutdown Backend again
// Run the testTask task, to run through those steps
task startBackend {
    dependsOn tasks.getByPath(":backend:appengineRun")
    evaluationDependsOn ":backend"

    project(":backend"){
        appengine{
            daemon true
        }
    }
    doLast {
        println "Backend started"
    }
}
task runConnectedTests {
    dependsOn (startBackend)
    finalizedBy ":app:connectedAndroidTest"
    doLast {
        println "Connected Tests Run"
    }
}
task shutdownBackend {
    dependsOn (runConnectedTests)
    finalizedBy tasks.getByPath(":backend:appengineStop")
    doLast {
        println "Backend shutdown"
    }
}
task testTask {
    dependsOn (shutdownBackend)
    doLast {
        println "testTask Testing complete"
    }
}


